#BlueJ class context
comment0.target=ArrayOperations
comment0.text=\r\n\ We\ understand\ that\ the\ Collections\ class\ provides\ static\ methods\ for\ operating\ with\ dynamic\ arrays\ \r\n\ (arraylists,\ linkedlists,\ vectors,\ in\ some\ cases\ the\ other\ data\ structures\ -->\ stacks,\ queues,\ sets,\ maps)\r\n\ \r\n\ Recall\ that\ a\ static\ array\ also\ has\ index\ positions,\ and\ its\ elements\ can\ be\ changed,\ but\ its\ size\ is\ constant\r\n\ You\ cannot\ add\ or\ remove\ elements\ from\ a\ static\ array\r\n\ \r\n\ Just\ as\ Collections\ provides\ methods\ for\ working\ with\ dynamic\ arrays,\ Arrays\ class\ provides\ methods\ for\r\n\ working\ with\ static\ arrays\r\n\ 1.\ Arrays.sort(x)\ -->\ take\ array\ x\ and\ use\ the\ compareTo\ method\ from\ the\ corresponding\ class\ to\ sort\ the\ elements\r\n\ -->\ Arrays\ does\ not\ provide\ min\ and\ max,\ but\ after\ sorting\ you\ would\ just\ use\ array[0]\ and\ array[array.length-1]\r\n\ 2.\ Arrays.fill(x,y)\ -->\ takes\ array\ x\ and\ fills\ each\ index\ position\ with\ whatever\ y\ is\r\n\ 3.\ Arrays.toString(x)\ -->\ STATIC\ method\ which\ simply\ accepts\ a\ static\ array\ and\ provides\ a\ string\ [v1,\ v2,\ v3,\ ...]\r\n\ 4.\ Arrays.equals(x,y)\ -->\ accepts\ two\ arrays\ x\ and\ y\ and\ returns\ true\ if\ they\ are\ "equal"\ (defined\ in\ Java\ API)\r\n\ 5.\ Arrays.copyOf(x,y)\ -->\ accepts\ an\ array\ x\ and\ some\ length\ y\r\n\ Returns\ another\ array\ where\ if\ y\ \=\=\ x.length,\ then\ the\ array\ is\ identical\r\n\ if\ y\ <\ x.length,\ then\ only\ the\ first\ y\ elements\ are\ returned\ in\ the\ new\ array\r\n\ if\ y\ >\ x.length,\ then\ the\ end\ of\ the\ new\ array\ is\ padded\ with\ 0's\r\n\ \r\n\ Today\:\ talked\ about\ Collections\ and\ Arrays\ classes,\ some\ important\ static\ methods\ that\ they\ provide\r\n\ 1\ class\ from\ now\:\ numeric\ data\ types\ (Long,\ Short,\ Float)\ -->\ how\ memory\ works\ in\ Java\r\n\ 2\ classes\ from\ now\:\ pass\ by\ value\r\n\ 3\ classes\ from\ now\:\ PriorityQueues\r\n\ 4\ classes\ from\ now\:\ final\ review\ (questions\ about\ anything.\ User\ input\ to\ recursion\ to\ inheritance\ to\ \r\n\ iterators\ to\ data\ structures,\ etc.)\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment2.params=a1\ a2\ n
comment2.target=boolean\ equalsFirstN(int[],\ int[],\ int)
comment2.text=\r\n\ This\ method\ accepts\ two\ int\ arrays\ and\ a\ value\ of\ n\r\n\ It\ returns\ true\ if\ the\ two\ arrays\ have\ equal\ \ values\ for\ the\ first\ n\ spaces\ within\ them\r\n\ \r\n\ @param\ a1\ the\ first\ array\r\n\ @param\ a2\ the\ second\ array\r\n\ @param\ n\ the\ number\ of\ elements\ to\ check\ for\ equality,\ starting\ from\ index\ position\ 0\r\n\ \r\n\ @return\ true\ if\ the\ arrays\ agree\ for\ the\ first\ n\ index\ positions,\ false\ otherwise\r\n\ \r\n\ [[can\ change\ the\ method\ here\ to\ throw\ an\ exception]]\r\n\ [[not\ implemented\ this\ way\ right\ now,\ but\ imagine\ throwing\ an\ exception\ if\ n\ is\ too\ large]]\r\n\ @throws\ IndexOutOfBoundsException\ if\ n\ exceeds\ the\ length\ of\ either\ of\ the\ two\ arrays\r\n
comment3.params=array
comment3.target=java.lang.Object\ min(java.lang.Object[])
comment4.params=array
comment4.target=java.lang.Object\ max(java.lang.Object[])
numComments=5
