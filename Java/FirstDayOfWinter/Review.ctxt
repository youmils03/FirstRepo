#BlueJ class context
comment0.target=Review
comment0.text=\r\n\ Which\ of\ the\ following\ data\ structures\ does\ NOT\ carry\ an\ enumeration?\r\n\ a.\ linked\ list\r\n\ b.\ hashtable\r\n\ c.\ vector\r\n\ d.\ concurrent\ hash\ map\r\n\ \r\n\ linked\ list\ has\ a\ list\ iterator.\ Vector\ does\ too.\ The\ other\ two\ don't\r\n\ \r\n\ hashtable\ has\ 2\ things\ you\ call\ iterator\ on\r\n\ Iterator<\ KeyType\ >\ keyParse\ \=\ (\ myDictionary.keySet(\ )\ ).iterator(\ );\r\n\ Iterator<\ ValueType\ >\ valueParse\ \=\ (\ myDictionary.values()\ ).iterator(\ );\r\n\ Enumeration<\ ValueType\ >\ valueParse2\ \=\ myDictionary.elements();\r\n\ \r\n\ 2\ types\ of\ indexed\ lists\r\n\ \r\n\ 2\ types\ of\ queues\r\n\ 1.\ queue\ can\ instantiate\ a\ linkedlist\:\ Queue<\ X\ >\ myQueue\ \=\ new\ LinkedList<\ X\ >(\ );\r\n\ 2.\ concurrent\ linked\ queue\:\ ConcurrentLinkedQueue<\ X\ >\ myQueue\ \=\ new\ ConcurrentLinkedQueue<\ X\ >(\ );\r\n\ \r\n\ all\ abstract\ methods\ are\ instance\ methods,\ but\ not\ all\ methods\ in\ an\ abstract\ class\ are\ necessarily\ instance\ methods\r\n\r\n\ the\ Collections\ class\ provides\ static\ methods\ that\ are\ helpful\ for\ working\ with\ dynamic\ arrays\ /\ lists\r\n\ the\ Arrays\ class\ provides\ static\ methods\ that\ are\ helpful\ for\ working\ with\ static\ arrays\r\n\ \r\n\ We\ implemented\ sorting\ and\ searching\ algorithms,\ but\ as\ long\ your\ class\ includes\ a\ compareTo(\ )\ method,\ you\r\n\ can\ just\ call\ the\ sort(x)\ or\ binarySearch(x,y)\ methods\ from\ either\ of\ these\ classes\ above\r\n\ \r\n\ On\ November\ 7th,\ we\ outlined\ 8\ remaining\ lessons.\ There\ are\ now\ 6\:\r\n\ 1.\ numeric\ types\ (Integer,\ Double,\ Short,\ Long,\ Float),\ 11/14/22\r\n\ 2.\ Collections\ and\ Arrays\ classes,\ 12/1/22\r\n\ ---\r\n\ 3.\ matrices\ (2D\ arrays,\ operations\:\ transpose,\ inverse,\ sum/difference,\ etc.)\ (exception\ handling)\r\n\ 4.\ pass\ by\ value\r\n\ 5.\ binary\ search\ trees\r\n\ 6.\ setting\ up\ a\ Github\ account\ /\ Linux\ /\ OS\ /\ software\ engineering,\ pull\ requests,\ merge,\ conflicts,\ etc.\r\n\ 7.\ priority\ queues\r\n\ 8.\ screen\ swap\ /\ Leetcode\r\n\r\n\ @author\ (your\ name)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment2.params=x\ y
comment2.target=void\ putAll(java.util.concurrent.ConcurrentHashMap,\ java.util.concurrent.ConcurrentHashMap)
comment2.text=\r\n\ This\ static\ method\ accepts\ two\ dictionaries,\ where\ all\ keys\ and\ values\ are\ strings\r\n\ It\ adds\ all\ key-value\ pairs\ from\ the\ second\ dictionary\ into\ the\ first\ dictionary\r\n\ @param\ x\ the\ dictionary\ into\ which\ to\ add\ the\ key-value\ pairs\r\n\ @param\ y\ the\ dictionary\ with\ the\ key-value\ pairs\ to\ add\r\n
numComments=3
